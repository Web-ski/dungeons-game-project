var Q=Object.defineProperty,Z=Object.defineProperties;var oo=Object.getOwnPropertyDescriptors;var S=Object.getOwnPropertySymbols;var eo=Object.prototype.hasOwnProperty,to=Object.prototype.propertyIsEnumerable;var O=(e,o,t)=>o in e?Q(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,l=(e,o)=>{for(var t in o||(o={}))eo.call(o,t)&&O(e,t,o[t]);if(S)for(var t of S(o))to.call(o,t)&&O(e,t,o[t]);return e},y=(e,o)=>Z(e,oo(o));import{l as $,m as c,o as i,c as n,a,t as P,F as w,n as D,q as f,p as j,k as L,s as C,v as H,b as T,x as A,f as R,w as ro}from"./vendor.58018eac.js";import{_,P as so}from"./index.13a7a05c.js";class d{static makeProxyToObject(o){return JSON.parse(JSON.stringify(o))}static firstLetterUppercase(o){return o.charAt(0).toUpperCase()+o.slice(1)}}const F="https://web-ski.github.io/dungeons-game-project/",g=["A","B","C","D","E","F","G","H","I"],b=50,I={normal:{A:["corner--left-top","wall--top","wall--top","wall--top","wall--top","wall--top","wall--top","wall--top","corner--right-top"],B:["wall--left","floor","floor","floor","floor","floor","floor","floor","wall--right"],C:["wall--left","floor","floor","floor","floor","floor","floor","floor","wall--right"],D:["wall--left","floor","floor","floor","floor","floor","floor","floor","wall--right"],E:["wall--left","floor","floor","floor","floor","floor","floor","floor","wall--right"],F:["wall--left","floor","floor","floor","floor","floor","floor","floor","wall--right"],G:["wall--left","floor","floor","floor","floor","floor","floor","floor","wall--right"],H:["wall--left","floor","floor","floor","floor","floor","floor","floor","wall--right"],I:["corner--left-bottom","wall--bottom","wall--bottom","wall--bottom","wall--bottom","wall--bottom","wall--bottom","wall--bottom","corner--right-bottom"]},cell:{right:{A:["dark-board","dark-board","dark-board","dark-board","dark-board","dark-board","dark-board","dark-board","dark-board"],B:["dark-board","corner--left-top","wall--top","wall--top","wall-torch--top","wall--top","wall--top","corner--right-top","dark-board"],C:["dark-board","wall--left","floor","floor","floor","floor","floor","cuoin--right-top","corner--right-top"],D:["dark-board","wall--left","floor","floor","floor","floor","floor","floor","wall--right"],E:["dark-board","wall--left","floor","floor","floor","floor","floor","floor","dark-board"],F:["dark-board","wall--left","floor","floor","floor","floor","floor","floor","wall--right"],G:["dark-board","wall--left","floor","floor","floor","floor","floor","cuoin--right-bottom","corner--right-bottom"],H:["dark-board","corner--left-bottom","wall--bottom","wall--bottom","wall--bottom","wall--bottom","wall--bottom","corner--right-bottom","dark-board"],I:["dark-board","dark-board","dark-board","dark-board","dark-board","dark-board","dark-board","dark-board","dark-board"]}},corridor:{vertical:{A:["dark-board","dark-board","corner--left-top","wall--top","wall--top","wall--top","corner--right-top","dark-board","dark-board"],B:["dark-board","dark-board","wall--left","floor","floor","floor","wall--right","dark-board","dark-board"],C:["dark-board","dark-board","wall--left","floor","floor","floor","wall--right","dark-board","dark-board"],D:["dark-board","dark-board","wall--left","floor","floor","floor","wall--right","dark-board","dark-board"],E:["dark-board","dark-board","wall--left","floor","floor","floor","wall--right","dark-board","dark-board"],F:["dark-board","dark-board","wall--left","floor","floor","floor","wall--right","dark-board","dark-board"],G:["dark-board","dark-board","wall--left","floor","floor","floor","wall--right","dark-board","dark-board"],H:["dark-board","dark-board","wall--left","floor","floor","floor","wall--right","dark-board","dark-board"],I:["dark-board","dark-board","corner--left-bottom","wall--bottom","wall--bottom","wall--bottom","corner--right-bottom","dark-board","dark-board"]}}};class ao{static makeBoard(o){const t=d.makeProxyToObject(o),r=[],s=9,u=9;for(let v=0;v<s;v++){let m=g[v];for(let k=0;k<u;k++){let x;x=this.setTile(t.type,t.model,t.orientation,m+k);const W=t.entries.find(q=>q.position===x.position);r.push(W||x)}}return r}static boardTile(o,t,r){return{type:o,position:t,destination:r}}static setTile(o,t,r,s){const u=r?I[t][r][s.charAt(0)][parseInt(s.charAt(1))]:I[t][s.charAt(0)][parseInt(s.charAt(1))];return this.boardTile(u,s,null)||this.boardTile("dark-board",s,null)}}class io{static getClosedDoors(o){return o?o.filter(({type:s})=>s==="door-closed--top"||s==="door-closed--right"||s==="door-closed--bottom"||s==="door-closed--left").map(s=>s.position):void 0}}class B{static checkAvailableField(o){return o?o.filter(({type:s})=>s==="floor"||s==="door--top"||s==="door--right"||s==="door--bottom"||s==="door--left").map(s=>s.position):void 0}static setHeroMove(o,t){if(t==="vertical"){const r=o.charAt(0),s=g.indexOf(r);return b*s+"px"}if(t==="horizontal"){const r=o.charAt(1);return b*r+"px"}}static setHeroLeaveBoard(o){switch(o){case"E8":return"E1";case"E0":return"E7";case"I4":return"B4";case"A4":return"H4";default:return o}}}const h=$("board",{state:()=>({isProcessing:!1,isBoardSwitching:!0,currentRoom:{},rooms:[]}),actions:{getBoardFromApi(){this.isProcessing=!0,fetch(F+"mocks/dungeons.json").then(e=>e.json()).then(e=>this.setDataToStore(e.rooms))},setDataToStore(e){this.rooms=e.map(o=>{const t=ao.makeBoard(o);return o.structures=t,o}),this.setCurrentRoom("b1"),this.isProcessing=!1},setCurrentRoom(e){const[o]=this.rooms.filter(t=>t.id===e);this.currentRoom=o,setTimeout(()=>this.setBoardSwitching(!1),200)},setBoardSwitching(e){this.isBoardSwitching=e},removeMaterialFromRoom(e){const o=d.makeProxyToObject(this.currentRoom).materials;let t;o.map((r,s)=>{r.id===e.id&&(t=s)}),o.splice(t,1),this.currentRoom.materials=o},openDoor(e){const o=d.makeProxyToObject(this.currentRoom),t=e.type.replace("-closed","");o.entries.map((r,s)=>{r.type===e.type&&(console.log(this.currentRoom.entries[s].type),this.currentRoom.entries[s].type=t)}),o.structures.map((r,s)=>{r.type===e.type&&(console.log(this.currentRoom.structures[s].type),this.currentRoom.structures[s].type=t)})}},getters:{getCurrentRoom:e=>d.makeProxyToObject(e.currentRoom).structures,getRoomEntries:e=>d.makeProxyToObject(e.currentRoom).entries,getRoomMaterials:e=>d.makeProxyToObject(e.currentRoom).materials,getRoomThreats:e=>(console.log("threat"),d.makeProxyToObject(e.currentRoom).threats),getClosedDoorsPostitons:e=>{const o=d.makeProxyToObject(e.currentRoom).entries;return io.getClosedDoors(o)},getBoardAvailablePositions:e=>{const o=d.makeProxyToObject(e.currentRoom).structures;return B.checkAvailableField(o)}}}),p=$("hero",{state:()=>({heroes:[],hero:null,heroPosition:"E4",isHeroDialog:!1,heroDialogText:"initial",isHeroKilled:!1}),actions:{getHeroFromApi(){fetch(F+"mocks/heroes.json").then(e=>e.json()).then(e=>this.setDataToStore(e.heroes))},setDataToStore(e){this.heroes=e,this.hero=this.heroes[0]},setIsHeroDialog(e){this.isHeroDialog=e},setHeroDialogText(e){this.heroDialogText=e},setHeroPosition(e){this.heroPosition=e},removeHeroKey(e){const t=d.makeProxyToObject(this.hero).keys.indexOf(e);this.hero.keys.splice(t,1)},setMaterialToHero(e){e.type==="coin"&&this.hero.coins++,e.type==="diamond"&&this.hero.diamonds++,e.type.includes("key")&&this.hero.keys.push(e.type),(e.type==="bread"||e.type==="life-potion"||e.type==="cheese")&&(this.hero.live+e.live>this.hero.maxLive?this.hero.live=this.hero.maxLive:this.hero.live=this.hero.live+e.live)},setThreatAffectHero(e){this.isHeroKilled||(e.type==="poison"||e.type==="firefloor")&&(this.hero.live-e.injury<=0?(this.hero.live=0,this.hero.lives===0||this.hero.lives--,this.setHeroKilled()):this.hero.live=this.hero.live-e.injury)},setHeroKilled(){this.isHeroKilled=!0,setTimeout(()=>this.setHeroRespawn(),2e3)},setHeroRespawn(){const e=h();e.setBoardSwitching(!1),e.setCurrentRoom("b1"),this.setHeroPosition("E4"),this.hero.live=this.hero.maxLive,this.isHeroKilled=!1}},getters:{getHeroKeys:e=>d.makeProxyToObject(e.hero).keys}});const M=e=>(j("data-v-53550c7a"),e=e(),L(),e),lo={key:0,class:"gameboard-header"},no={class:"header-row"},co={class:"hero-data"},ho=M(()=>a("div",{class:"icon heart"},null,-1)),uo={class:"text"},mo=M(()=>a("div",{class:"icon diamond"},null,-1)),fo={class:"text"},go=M(()=>a("div",{class:"icon coin"},null,-1)),po={class:"text"},_o={class:"hero-data"},bo={class:"header-row"},vo=M(()=>a("label",{for:"livebar"},null,-1)),ko=["max","value"],yo={computed:l({},c(p,["hero"])),methods:{getHeroLives(){return this.hero.lives},getDimanonds(){return this.hero.diamonds},getHeroCoins(){return this.hero.coins},getHerokeys(){return this.hero.keys},getHeroLive(){return this.hero.live},getHeroMaxLive(){return this.hero.maxLive}}},wo=Object.assign(yo,{setup(e){return(o,t)=>o.hero?(i(),n("section",lo,[a("div",no,[a("div",co,[a("div",null,[ho,a("p",uo,P(o.getHeroLives()),1)]),a("div",null,[mo,a("p",fo,P(o.getDimanonds()),1)]),a("div",null,[go,a("p",po,P(o.getHeroCoins()),1)])]),a("div",_o,[a("div",null,[(i(!0),n(w,null,D(o.getHerokeys(),r=>(i(),n("div",{class:C("icon "+r),key:r},null,2))),128))])])]),a("div",bo,[vo,a("progress",{id:"livebar",max:o.getHeroMaxLive(),value:o.getHeroLive()},null,8,ko)])])):f("",!0)}});var G=_(wo,[["__scopeId","data-v-53550c7a"]]);const Ho={initial:"What's a horrible place? Where am I?",closedDoor:["The door is closed!","There is no entry.","Ups. Closed door."],openedDoor:["Yay! The door is open!","Ha ha! I'm smart.","Good work. The way is open."],wrongKey:["Ups. Bad key.","I have the wrong key","Should I get another key?"]};class To{static chooseDialogText(o){return typeof o=="string"?o:o[Math.floor(Math.random()*o.length)]}}const Po={key:0,id:"dialog"},Do={computed:l({},c(p,["isHeroDialog","heroDialogText"])),methods:{getHeroText(){return To.chooseDialogText(Ho[this.heroDialogText])}}},Ro=Object.assign(Do,{setup(e){return(o,t)=>o.isHeroDialog?(i(),n("div",Po,P(o.getHeroText()),1)):f("",!0)}});var V=_(Ro,[["__scopeId","data-v-81a89ba8"]]);const Bo={components:{HeroTooltip:V},data(){return{isMoving:!1,isHurting:!1}},computed:y(l(l({},c(p,["heroPosition","isHeroKilled"])),c(h,["getRoomEntries","getRoomMaterials","getRoomThreats","isBoardSwitching"])),{getHeroDestination(){return this.heroMove()}}),methods:y(l(l({},H(h,["setCurrentRoom","removeMaterialFromRoom","setBoardSwitching"])),H(p,["setHeroPosition","setMaterialToHero","setThreatAffectHero"])),{heroMove(){this.takeMaterial(this.heroPosition,this.getRoomMaterials),this.getThreat(this.heroPosition,this.getRoomThreats),this.switchBoard(this.heroPosition,this.getRoomEntries)},getHeroPositionX(){return B.setHeroMove(this.heroPosition,"horizontal")},getHeroPositionY(){return B.setHeroMove(this.heroPosition,"vertical")},switchBoard(e,o){const[t]=o.filter(r=>e===r.position);t!=null&&t.destination&&(this.setBoardSwitching(!0),this.setCurrentRoom(t.destination),this.setHeroPosition(B.setHeroLeaveBoard(t.position)))},takeMaterial(e,o){const t=new Audio("audio/game/materials/coin.wav"),r=new Audio("audio/game/materials/key.wav"),s=new Audio("audio/game/materials/food.wav"),u=new Audio("audio/game/materials/drink.wav"),v=new Audio("audio/game/materials/diamond.wav"),[m]=o.filter(k=>e===k.position);if(m){switch(m==null?void 0:m.type){case"coin":t.play();break;case"blue-key":case"gold-key":r.play();break;case"cheese":case"bread":s.play();break;case"life-potion":u.play();break;case"diamond":v.play();break;default:t.play()}this.removeMaterialFromRoom(m),this.setMaterialToHero(m)}},getThreat(e,o){const t=new Audio("audio/game/hero/hurt.wav");if(this.isHeroKilled)this.isHurting=!1;else{this.isHurting&&(this.isHurting=!1);const[r]=o.filter(s=>e===s.position);r&&(this.setThreatAffectHero(r),t.play(),this.isHurting=!0,setTimeout(()=>this.getThreat(this.heroPosition,this.getRoomThreats),r.time*100))}}}),updated(){!this.isHeroKilled&&!this.isHurting&&this.getHeroDestination}},Co=Object.assign(Bo,{setup(e){return(o,t)=>o.isBoardSwitching?f("",!0):(i(),n("div",{key:0,id:"hero",class:C({hurting:o.isHurting}),style:A("left: "+o.getHeroPositionX()+"; top: "+o.getHeroPositionY())},[T(V)],6))}});var U=_(Co,[["__scopeId","data-v-07851170"]]);class E{static setMaterialPosition(o,t){if(t==="vertical"){const r=o.charAt(0),s=g.indexOf(r);return b*s+"px"}if(t==="horizontal"){const r=o.charAt(1);return b*r+"px"}}}const Ao={props:["material"],computed:l({},c(h,["isBoardSwitching"])),methods:{setType(){return this.material.type},setPositionX(){return E.setMaterialPosition(this.material.position,"horizontal")},setPositionY(){return E.setMaterialPosition(this.material.position,"vertical")}}},Mo=Object.assign(Ao,{setup(e){return(o,t)=>o.isBoardSwitching?f("",!0):(i(),n("div",{key:0,class:C("material "+e.material.type),style:A("background-image: url(images/game/materials/"+o.setType()+".png); left: "+o.setPositionX()+"; top: "+o.setPositionY())},null,6))}});var z=_(Mo,[["__scopeId","data-v-591be26a"]]);class K{static setThreatPosition(o,t){if(t==="vertical"){const r=o.charAt(0),s=g.indexOf(r);return b*s+"px"}if(t==="horizontal"){const r=o.charAt(1);return b*r+"px"}}}const xo={props:["threat"],computed:l({},c(h,["isBoardSwitching"])),methods:{setType(){return this.threat.type},setPositionX(){return K.setThreatPosition(this.threat.position,"horizontal")},setPositionY(){return K.setThreatPosition(this.threat.position,"vertical")}}},So=Object.assign(xo,{setup(e){return(o,t)=>o.isBoardSwitching?f("",!0):(i(),n("div",{key:0,class:C("threat "+e.threat.type),style:A("background-image: url(images/game/threats/"+o.setType()+".png); left: "+o.setPositionX()+"; top: "+o.setPositionY())},null,6))}});var Y=_(So,[["__scopeId","data-v-69e25d86"]]);const Oo=["id"],Io={props:["elem"],methods:{setUrl(){return`background-image: url("images/game/cellar/${this.elem.type}.png")`}}},N=Object.assign(Io,{setup(e){return(o,t)=>(i(),n("div",{id:e.elem.position,class:"board-elem",style:A(o.setUrl())},null,12,Oo))}});const Eo=e=>(j("data-v-5d1f27df"),e=e(),L(),e),Ko={key:0,class:"killed-hero"},$o=Eo(()=>a("h2",null,"You are dead!",-1)),jo=[$o],Lo={computed:l({},c(p,["isHeroKilled"]))},Fo=Object.assign(Lo,{setup(e){return(o,t)=>o.isHeroKilled?(i(),n("div",Ko,jo)):f("",!0)}});var X=_(Fo,[["__scopeId","data-v-5d1f27df"]]);const Go={class:"gameboard-main"},Vo={components:{MaterialElem:z,ThreatElem:Y,BoardElem:N,HeroElem:U,HeroKilledView:X},computed:l({},c(h,["getCurrentRoom","getRoomMaterials","getRoomThreats"])),methods:y(l({},H(h,["setBoardSwitching"])),{getRoomElems(){return this.getCurrentRoom},getMaterials(){return this.getRoomMaterials},getThreats(){return this.getRoomThreats}}),created(){this.setBoardSwitching(!1)}},J=Object.assign(Vo,{setup(e){return(o,t)=>(i(),n("div",Go,[(i(!0),n(w,null,D(o.getRoomElems(),r=>(i(),R(N,{key:r.id,elem:r},null,8,["elem"]))),128)),T(U),(i(!0),n(w,null,D(o.getMaterials(),r=>(i(),R(z,{key:r.id,material:r},null,8,["material"]))),128)),(i(!0),n(w,null,D(o.getThreats(),r=>(i(),R(Y,{key:r.id,threat:r},null,8,["threat"]))),128)),T(X)]))}});const Uo={key:0},zo={class:"game"},Yo={id:"mobile-move-console"},No={components:{GameboardHeaderView:G,GameboardMainView:J},computed:l(l({},c(h,["isProcessing","getCurrentRoom","getRoomEntries","getClosedDoorsPostitons","getBoardAvailablePositions"])),c(p,["heroPosition","getHeroKeys","isHeroDialog","isHeroKilled"])),methods:y(l(l({},H(h,["getBoardFromApi","openDoor"])),H(p,["getHeroFromApi","setHeroPosition","removeHeroKey","setIsHeroDialog","setHeroDialogText"])),{checkHeroMove(e){if(!this.isHeroKilled){if(this.getBoardAvailablePositions.includes(e))this.setHeroPosition(e);else if(this.getClosedDoorsPostitons.includes(e))if(this.getHeroKeys.length>0){const[o]=this.getRoomEntries.filter(r=>r.position===e),t=this.getHeroKeys.includes(o.key);t&&this.removeHeroKey(o.key),t&&this.openDoor(o),t&&this.setHeroDialogText("openedDoor"),t&&this.setIsHeroDialog(!0),!t&&this.setHeroDialogText("wrongKey"),!t&&this.setIsHeroDialog(!0)}else this.setHeroDialogText("closedDoor"),this.setIsHeroDialog(!0)}},moveHeroByConsole(e){this.moveHero(e)},moveHeroByKeyboard(e){e.stopPropagation(),this.moveHero(e.key)},moveHero(e){const o=this.heroPosition.charAt(0),t=g.indexOf(o),r=parseInt(this.heroPosition.charAt(1));let s;switch(this.isHeroDialog&&this.setIsHeroDialog(!1),e){case"w":s=g[t-1]+r,this.checkHeroMove(s);break;case"d":s=o+(r+1),this.checkHeroMove(s);break;case"s":s=g[t+1]+r,this.checkHeroMove(s);break;case"a":s=o+(r-1),this.checkHeroMove(s);break;default:return!1}}}),created(){this.getBoardFromApi(),this.getHeroFromApi(),window.addEventListener("keyup",this.moveHeroByKeyboard),this.setIsHeroDialog(!0)},beforeUnmount(){window.removeEventListener("keyup",this.moveHeroByKeyboard)}},Xo=Object.assign(No,{setup(e){return(o,t)=>(i(),n(w,null,[o.isProcessing?(i(),n("div",Uo,"Game loading...")):f("",!0),o.isProcessing?f("",!0):(i(),R(so,{key:1},{default:ro(()=>[a("section",zo,[T(G),T(J),a("aside",Yo,[a("div",null,[a("button",{class:"btn top",onClick:t[0]||(t[0]=r=>o.moveHeroByConsole("w"))}," \u2191 ")]),a("div",null,[a("button",{class:"btn left",onClick:t[1]||(t[1]=r=>o.moveHeroByConsole("a"))}," \u2190 "),a("button",{class:"btn right",onClick:t[2]||(t[2]=r=>o.moveHeroByConsole("d"))}," \u2192 ")]),a("div",null,[a("button",{class:"btn down",onClick:t[3]||(t[3]=r=>o.moveHeroByConsole("s"))}," \u2193 ")])])])]),_:1}))],64))}});var Qo=_(Xo,[["__scopeId","data-v-57b19f05"]]);export{Qo as default};
